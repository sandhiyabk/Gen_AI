# -*- coding: utf-8 -*-
"""Gender_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f5g79DI2Tvrgfvdc0zukmZ4rM-l8sCSH
"""

import os
import numpy as np
import librosa
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score

# ✅ Set your data directory
data_dir = "/content/drive/MyDrive/task"  # Change this to your actual path

# ✅ Feature extractor function
def extract_features(file_path):
    try:
        audio, sr = librosa.load(file_path, duration=3, offset=0.5)
        mfccs = librosa.feature.mfcc(y=audio, sr=sr, n_mfcc=13)
        return np.mean(mfccs.T, axis=0)
    except Exception as e:
        print(f"Error in {file_path}: {e}")
        return None

# ✅ Prepare dataset
features = []
labels = []

# Check if data directory exists
if not os.path.exists(data_dir):
    print(f"Error: Data directory not found at {data_dir}")
else:
    for label in ['Male', 'Female']:
        folder_path = os.path.join(data_dir, label)
        # Check if subdirectory exists
        if not os.path.exists(folder_path):
            print(f"Error: Subdirectory '{label}' not found in {data_dir}")
            continue # Skip to the next label if subdirectory doesn't exist

        for file in os.listdir(folder_path):
            if file.endswith('.mp3'):
                path = os.path.join(folder_path, file)
                feat = extract_features(path)
                if feat is not None:
                    features.append(feat)
                    labels.append(label)

# ✅ Convert to arrays
X = np.array(features)
y = np.array(labels)

# ✅ Train model
if len(X) > 0:
    x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(x_train, y_train)

    y_pred = model.predict(x_test)
    print("Accuracy:", accuracy_score(y_test, y_pred))
    print("Classification Report:\n", classification_report(y_test, y_pred))
else:
    print("No audio data found.")

from google.colab import files
uploaded = files.upload()

def predict_gender(audio_file):
    feature = extract_features(audio_file)
    if feature is not None:
        feature = feature.reshape(1,-1)
        prediction = model.predict(feature)
        return prediction[0]
    else:
      return "could not process audio"

# Check if any files were uploaded
if uploaded:
    for fname in uploaded.keys():
        print(f"{fname}: {predict_gender(fname)}")
else:
    print("No files were uploaded.")