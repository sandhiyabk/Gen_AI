# -*- coding: utf-8 -*-
"""sentiment_NER_translate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hcwsAninHD0RSVGFy9Ya-wd3DTnejPsU
"""

import spacy
from textblob import TextBlob
from deep_translator import GoogleTranslator

# Load the small English model in spaCy
nlp = spacy.load("en_core_web_sm")

def smart_nlp_assistant(text):
    # Analyze sentiment using TextBlob
    blob = TextBlob(text)
    polarity = blob.sentiment.polarity
    if polarity > 0:
        sentiment = "Positive 😊"
    elif polarity < 0:
        sentiment = "Negative 😞"
    else:
        sentiment = "Neutral 😐"

    # Perform Named Entity Recognition using spaCy
    doc = nlp(text)
    named_entities = [f"{ent.text} ({ent.label_})" for ent in doc.ents]
    if not named_entities:
        named_entities = ["No named entities found."]

    # Translate the text to French using GoogleTranslator
    translated_text = GoogleTranslator(source='auto', target='fr').translate(text)

    # Display the results
    print("\n📊 NLP Assistant Report")
    print("--------------------------")
    print(f"🧾 Sentiment: {sentiment}")
    print("\n📌 Named Entities:")
    for entity in named_entities:
        print(f" - {entity}")
    print("\n🌍 Translated (French):")
    print(translated_text)

# Run the assistant
if _name_ == "_main_":
    print("🔍 Welcome to the Smart NLP Assistant!")
    user_input = input("📝 Please enter some text: ")
    smart_nlp_assistant(user_input)

import spacy
from textblob import TextBlob
from deep_translator import GoogleTranslator

# Load the small English model in spaCy
nlp = spacy.load("en_core_web_sm")

def smart_nlp_assistant(text):
    # Analyze sentiment using TextBlob
    blob = TextBlob(text)
    polarity = blob.sentiment.polarity
    if polarity > 0:
        sentiment = "Positive 😊"
    elif polarity < 0:
        sentiment = "Negative 😞"
    else:
        sentiment = "Neutral 😐"

    # Perform Named Entity Recognition using spaCy
    doc = nlp(text)
    named_entities = [f"{ent.text} ({ent.label_})" for ent in doc.ents]
    if not named_entities:
        named_entities = ["No named entities found."]

    # Translate the text to French using GoogleTranslator
    translated_text = GoogleTranslator(source='auto', target='fr').translate(text)

    # Display the results
    print("\n📊 NLP Assistant Report")
    print("--------------------------")
    print(f"🧾 Sentiment: {sentiment}")
    print("\n📌 Named Entities:")
    for entity in named_entities:
        print(f" - {entity}")
    print("\n🌍 Translated (French):")
    print(translated_text)

# Run the assistant
if __name__ == "__main__":
    print("🔍 Welcome to the Smart NLP Assistant!")
    user_input = input("📝 Please enter some text: ")
    smart_nlp_assistant(user_input)

# pip install googletrans==4.0.0-rc1

from googletrans import Translator

def en_to_ta(text: str) -> str:
    t = Translator()
    result = t.translate(text, src='en', dest='ta')
    return result.text

print(en_to_ta("Welcome to Madurai!"))

!pip install googletrans==4.0.0-rc1
# pip install googletrans==4.0.0-rc1

from googletrans import Translator

def en_to_ta(text: str) -> str:
    t = Translator()
    result = t.translate(text, src='en', dest='ta')
    return result.text
text=input("Enter the text:")

print(en_to_ta(text))