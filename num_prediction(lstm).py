# -*- coding: utf-8 -*-
"""num_prediction(LSTM).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16KB6WjOsIFwLrXQ-Gv0QKUHUFY0Zy12y
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Input
import matplotlib.pyplot as plt

sequence = np.array([i for i in range(1, 101)])
window_size = 3
x = []
y = []
for i in range(len(sequence) - window_size):
    window = sequence[i : i + window_size]
    x.append(window)
    y.append(sequence[i + window_size])
x = np.array(x)
y = np.array(y)
x = x.reshape(x.shape[0], x.shape[1], 1)

model = Sequential()
model.add(Input(shape=(window_size, 1))) # Add Input layer
model.add(LSTM(50, activation='relu')) # Remove input_shape from SimpleRNN
model.add(Dense(1))

model.compile(optimizer='adam', loss='mse')
model.fit(x, y, epochs=100, verbose=0)

print("Training complete")

test_input = np.array([98, 99, 100])
test_input = test_input.reshape(1, window_size, 1)
prediction = model.predict(test_input, verbose=0)

print(f"Prediction: {prediction[0][0]:.2f}")

predictions = model.predict(x)
plt.plot(y, label='True Values')
plt.plot(predictions, label='Predicted Values')
plt.legend()
plt.show()